openapi: '3.0.3'
info:
  title: netgraph api
  description: netgraph api
  version: 0.0.1
servers:
  - url: http://sample.example.com/
    description: production server
paths:
  /tenants/{tenantName}:
    post:
      parameters:
        - name: tenantName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-tenants-tenantName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    delete:
      parameters:
        - name: tenantName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-tenants-tenantName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /{devices}:
    get:
      description: this api is supported tenant, switch, and router.
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    deviceName:
                      type: string
                      description: sample
                    properties:
                      type: object
                      properties:
                        tenant:
                          type: string
                          description: sample
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-devices-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /switches/{deviceName}:
    post:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false 
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantName:
                  type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    delete:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenantName:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /switches/{deviceName}/interfaces:
    get:
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    properties:
                      type: object
                      properties:
                        interfaceType:
                          type: string
                          description: sample
                        interfaceNumber:
                          type: string
                          description: sample
                        tags:
                          type: boolean
                          description: sample
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-interfaces-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    post:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true 
        description: sample
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  properties:
                    type: object
                    properties:
                      interfaceType:
                        type: string
                        description: sample
                      interfaceNumber:
                        type: string
                        description: sample
                      tags:
                        type: boolean
                        description: sample
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-interfaces-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    delete:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true 
        description: sample
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  properties:
                    type: object
                    properties:
                      interfaceType:
                        type: string
                        description: sample
                      interfaceNumber:
                        type: string
                        description: sample
                      tags:
                        type: boolean
                        description: sample
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-interfaces-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /routers/{deviceName}:
    post:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: false 
        content:
          application/json:
            schema:
              type: object
              properties:
                tenantName:
                  type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-routers-deviceName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole 
    delete:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenantName:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-routers-deviceName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole 
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /routers/{deviceName}/interfaces:
    get:
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    properties:
                      type: object
                      properties:
                        interfaceType:
                          type: string
                          description: sample
                        interfaceNumber:
                          type: string
                          description: sample
                        tags:
                          type: boolean
                          description: sample
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-interfaces-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    post:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true 
        description: sample
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  properties:
                    type: object
                    properties:
                      interfaceType:
                        type: string
                        description: sample
                      interfaceNumber:
                        type: string
                        description: sample
                      tags:
                        type: boolean
                        description: sample
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-interfaces-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    delete:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true 
        description: sample
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  properties:
                    type: object
                    properties:
                      interfaceType:
                        type: string
                        description: sample
                      interfaceNumber:
                        type: string
                        description: sample
                      tags:
                        type: boolean
                        description: sample
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-switches-deviceName-interfaces-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /vlanorgs/{orgName}:
    post:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-vlanorgs-orgName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole   
    delete:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  tenantName:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-vlanorgs-orgName-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
  /vlanorgs/{orgName}/vlans:
    get:
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    properties:
                      type: object
                      properties:
                        vlanid:
                          type: string
                          description: sample
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-vlanorgs-orgName-vlans-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    post:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true 
        description: sample
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  properties:
                    type: object
                    properties:
                      vlanid:
                        type: string
                        description: sample
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-vlanorgs-orgName-vlans-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    delete:
      parameters:
        - name: deviceName
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true 
        description: sample
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  properties:
                    type: object
                    properties:
                      vlanid:
                        type: string
                        description: sample
      responses:
        '200':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '500':
          description: sample
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-amazon-apigateway-integration:
        type: aws_proxy
        httpMethod: POST
        uri: arn:aws:apigateway:ap-northeast-1:lambda:path/2015-03-31/functions/arn:aws:lambda:ap-northeast-1:<accountId>:function:netgraph-vlanorgs-orgName-vlans-function/invocations
        credentials: arn:aws:iam::<accountId>:role/APIGatewayLambdaExecutionRole
    options:
      summary: CORS support
      description: |
        Enable CORS by returning correct headers
      tags:
      - CORS
      responses:
        '200':
          description: Default response for CORS method
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Headers:
              schema:
                type: string
          content: {}
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: '{"statusCode": 200}'
        passthroughBehavior: "never"
        responses:
          default:
            statusCode: '200'
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
              method.response.header.Access-Control-Allow-Methods: "'*'"
              method.response.header.Access-Control-Allow-Origin: "'*'"